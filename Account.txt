package HomeWork0401;

import java.util.Scanner;

public class Account{
	static Scanner scanner = new Scanner(System.in);
	static Account[] accounts = new Account[100];
	//필드
	public static final int MIN_BALANCE = 0;
	public static final int MAX_BALANCE = 1000000;
	private int balance;
  	private String an;
  	private String owner;
  
  	//계좌 개설
  	public Account(String an, String owner, int balance) {
  	this.an = an;
  	this.owner = owner;
  	this.balance = balance;
  	}
  	
  	//an get
  	public String getAn() { 
  		return an; 
	}
  	//an set
  	public void setAn(String an) { 
  		this.an = an;
  	}
  	//balance get
  	public String getOwner() { 
  		return owner; 
	}
  	//balance set
  	public void setOwner(String owner) {
  		this.owner = owner; 
	}
	
	//balance get
  	public int getBalance() {
	    return balance;
  	}
  	//balance set
  	public void setBalance(int balance) {
  		if (balance < Account.MIN_BALANCE || balance > Account.MAX_BALANCE) {
	      return;
	    }
	    this.balance = balance;
  	}
  	
	//계좌 생성 
	public static void createAccount() {
		System.out.println("------------");
		System.out.println("계좌생성");
		System.out.println("------------");
		
		System.out.print("계좌번호: ");
		String an = scanner.nextLine();
		
		System.out.print("계좌주: ");
		String owner = scanner.nextLine();
		
		System.out.print("초기입금액: ");
		int balance = Integer.parseInt(scanner.nextLine());
		Account newAccount = new Account(an, owner, balance);
		
		for(int i=0; i < accounts.length; i++) {
			if(accounts[i] == null) {
				accounts[i] = newAccount;
				System.out.println("결과: 계좌가 생성되었습니다.");
				break;
			}
		}
	}
	
	//계좌 목록
	public static void showAccount () {
		System.out.println("----------");
		System.out.println("계좌목록");
		System.out.println("----------");
	
		for(int i=0; i<accounts.length; i++) {
			Account account = accounts[i];
			if(account != null) {
				System.out.print(account.getAn());
				System.out.print(" ");
				System.out.print(account.getOwner());
				System.out.print(" ");
				System.out.print(account.getBalance());
				System.out.println();
			}
		}
	}
	//예금
	public static void deposit() {
		System.out.println("----------");
		System.out.println("예금");
		System.out.println("----------");

		System.out.print("계좌번호: ");
		String an = scanner.nextLine();
		System.out.print("예금액: ");
		int money = Integer.parseInt(scanner.nextLine());
		Account account = findAccount(an);
		if(account == null) {
			System.out.println("결과: 계좌가 없습니다.");
			return;
		}
		account.setBalance(account.getBalance() + money);
		System.out.println("결과: 예금이 성공되었습니다.");
	}
	//출금		
	public static void withdraw() {
		System.out.println("----------");
		System.out.println("출금");
		System.out.println("----------");
		
		System.out.print("계좌번호: ");
		String an = scanner.nextLine();
		System.out.print("출금액: ");
		int money = Integer.parseInt(scanner.nextLine());
		Account account = findAccount(an);
		if(account == null) {
			System.out.println("결과: 계좌가 없습니다.");
			return;
		}
		account.setBalance(account.getBalance() - money);
		System.out.println("결과: 출금이 성공되었습니다.");
	}
	//계좌일치여부
	private static Account findAccount(String an) {
		Account account = null;
		for(int i=0; i<accounts.length; i++) {
			if(accounts[i] != null) {
				String newAn = accounts[i].getAn();
				if(newAn.equals(an)) {
					account = accounts[i];
					break;
				}
			}
		}
		return account;
	}
}
